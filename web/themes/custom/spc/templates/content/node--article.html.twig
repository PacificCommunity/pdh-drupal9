{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
<div class="spc-panels">
  <div class="spc-middle-section">
    <article{{ attributes.addClass('article') }}>
      <div class="group-title-block">
        {{ title_prefix }}
        {% if not page %}
          <h2{{ title_attributes }}>
            <a href="{{ url }}" rel="bookmark">{{ label }}</a>
          </h2>
        {% endif %}
        {{ title_suffix }}

        {% if display_submitted %}
            <div class="author">{{ author_name }}</div>
            <div class="post-date">
              {% set datetime = node.getCreatedTime|default(0) %}
              {{ datetime|date('F d, Y') }}
            </div>
            <div class="insights-topic"><div class="view-mode-group_with_icon">
              <div class="group-with-icon">
                <a class="thematic-fa-link" href="{{ related_topic.url }}" aria-label="{{ related_topic.title }}">
                  <div class="field field-name-field-fa-icon">
                    <i class="{{ related_topic.icon }} fa-2x" aria-hidden="true"></i>
                  </div>
                  <span>{{ related_topic.title }}</span>
                </a>
 
              </div>
            </div>
            </div>
        {% endif %}
        {% if syndicated.url %} 
          <a href="{{ syndicated.url }}" rel="bookmark">{{ 'Original Story'|t }}</a>
        {% endif %}
      </div>
              
      <div class="field-type-image">
        {{ content.field_image }}
      </div>

      <div class="body-text">
        {{ content.body }}
      </div>
    </article>
    <div class="related-datasets article-related-ds">
      <h2 class="pane-title">{{ 'Related Datasets' }}</h2>
      <div class="">
        {% if datasets %}
          {% for dataset in datasets %}
            <div class="dataset-item">
              <div class="dataset-org">
                <a href="{{ dataset.organization.spc_base_url }}">
                  <img class="media-object" src="{{ dataset.organization.image_url }}" alt="..." title="{{ dataset.org.title }}">
                </a>
              </div>		
              <div class="dataset-title">
                <a href="{{ dataset.url }}">{{ dataset.title }}</a>
              </div>
              <div class="dataset-date">
                <span>{{ 'Release Date' }}:</span>
                <span class="dataset-date-green">{{ dataset.date }}</span>
              </div>
              {% if dataset.resources %}
                <div class="dataset-formats">
                  <span>{{ 'File Format' }}:</span>
                  {% for res in dataset.resources %}
                    <a href="{{ res.url }}" aria-label="{{ res.format }}">
                      <div class="res-formats res-format-{{ res.format|lower }}"></div>
                    </a>
                  {% endfor %}
                </div>
              {% endif %}
            </div>
          {% endfor %}        
        {% endif %}
      </div>  
    </div>  
  </div>
</div>