<?php

use Drupal\Core\Url;
use Drupal\user\Entity\User;
use Drupal\node\Entity\Node;
use Drupal\taxonomy\Entity\Term;
use Drupal\Core\Form\FormStateInterface;

/**
 * Impelements hook_theme().
 */
function spc_main_theme($existing, $type, $theme, $path){
  return [
    'main_banner_block' => [
      'variables' => [
        'data' => null
      ]
    ],
    'topic_banner_block' => [
      'variables' => [
        'data' => null
      ]
    ],
    'spc_dashboard_transform_chart_block' => [
      'variables' => [
        'data' => null
      ],
    ],
    'spc_footer_partners' => [
      'variables' => [
        'partners' => null
      ]
    ],
    'spc_home_page' => [
      'variables' => [
        'data' => null
      ]
    ],
  ];
}

/**
 * Implements hook_cron().
 */
function spc_main_cron() {
  // Getting Dataset Publications count for placing in country EEZ entity.
  $spcPublicationImport = \Drupal::service('spc_publication_import.spcPublicationImport');
  $countries_tax =\Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree('country');
  foreach($countries_tax as $country_term){
    $country = Term::load($country_term->tid);
    $country_code = $country->get('field_country_code')->getValue()[0]['value'];
    $datasets_count = $spcPublicationImport->get_ckan_country_datasets_count($country_code);
    $country->set('field_datasets_count', $datasets_count);
    $country->save();
  }
}

/**
 * Implements form_alter().
 */
function spc_main_form_alter(&$form, &$form_state, $form_id)
{
  // Delete N\A option in header_type field for basic page form
  if ($form_id === 'node_page_form' || $form_id === 'node_page_edit_form') {
    unset($form['field_header_type']['widget']['#options']['_none']);
  }
}

/**
 * Implements preprocess_html().
 */
function spc_main_preprocess_html(&$variables)
{
  // Add class to body based on .header_type field of basic page node
  if (array_key_exists('node_type', $variables) && $variables['node_type'] === 'page') {
    $node = \Drupal::routeMatch()->getParameter('node');
    if ($node->hasField('field_header_type')) {
      $header_type = ($node->get('field_header_type')->getValue()[0]['value'] ?? null) ? 'maximal' : 'minimal';
      $variables['attributes']['class'][] = $header_type;
    }

    if ($node->hasField('field_content_wrapper_type')) {
      $page_wrapper_type = $node->get('field_content_wrapper_type')->getValue()[0]['value'] ?? null;
      if ($page_wrapper_type === 'container-fluid') {
        $variables['attributes']['class'][] = 'page-fluid';
      }
    }
  }
}

/**
 * Implements hook_user_login().
 */
function spc_main_user_login($account) {
  $url = "/";
  $response = new Symfony\Component\HttpFoundation\RedirectResponse($url);
  $response->send();
  return;
}
